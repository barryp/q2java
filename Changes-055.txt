CHANGES from v0.5.4 to v0.5.5

---------------------------------------------------------------------------
This file will just list changes in the core packages 
(q2java, q2jgame, baseq2). Add-ons will have to list their own changes.
---------------------------------------------------------------------------

DLL CHANGES ===============================================================
       
q2java_NativeEntity.c

    Changed: Java_q2java_NativeEntity_traceMove0() wasn't relinking the 
             entity after moving it.
    
    
JAVA CHANGES ==============================================================

q2java.Q2JavaSecurityManager

    Changed: The meanings of the security levels have changed so that:
    
                Level 2 (the default) now allows file read access to all
                files in or below the game directory (the game directory
                being something like c:\quake2\q2java), and file write access
                to files in or below the <gamedir>\sandbox directory.  No
                network access is allowed
                
                Level 1 - same as level 2 but with network access allowed for 
                ports >1023

q2java.TraceResults

    Added:   toString() method to help with debugging
    
    
q2jgame.DefaultClassFactory    

    Changed: There were two removeModule methods that replicated quite a bit
             of code, one was simplified to just call the other.

q2jgame.Game

    Changed: On startup this class looked for a CVAR named "q2jgame_packages"
             for a list of modules to load, but for the sake of consistency it 
             now looks for "q2jgame_modules" instead (although "q2jgame_packages"
             will still work for the sake of backwards compatability).
             
             Quinn suggested that as modules are added and removed - the CVAR be 
             updated so that on a DLL reload (usually caused by the "map" command)
             you don't lose the current configuration.
             
             He also supplied improved parsing code that looks for module 
             alias names in the CVAR string between square brackets [], so you 
             can now start the game with a param like:
             
                +set q2jgame_modules menno.ctf[ctf]+baseq2
                
             to load the "menno.ctf" module under the alias "ctf" along with the 
             "baseq2" module under no alias.
             
             The init(), notifyModuleAdded(), and notifyModuleRemoved() methods
             were updated to support these changes.
             
    Added:   saveList() method to save an updated module list to the 
             "q2jgame_modules" CVAR, to implement Quinn's suggestion above.            
             
             
baseq2.BFGBlast
baseq2.BlasterBolt    
baseq2.Door  
baseq2.Rocket
baseq2.GenericBlaster 
baseq2.GenericGrenade
baseq2.GameObject
baseq2.MiscUtil
baseq2.spawn.weapon_*

    Changed: all damage and radius-damage related calls now pass an extra String
             parameter to indicate the type of damage, used as a key to lookup
             Player obituaries      
             
baseq2.GameModule

    Added:   getSpawnpoint() method lets you find out the target name of the
             spawnpoint we should use for this map in single-player mode  
             
baseq2.GameObject
    
    Changed: damage() method now takes an additional String parameter - the 
             obituary key (equivalent to the C DLL's MOD_ constants)  Subclasses
             of GameObject that override the damage() method all need to be
             updated to support the extra parameter.   
             
baseq2.GenericSpawnpoint

    Changed: constructor now registers spawnpoints with the level registry if
             they have targetnames (needed for finding the right single-player
             spawnpoint)
             
             toString() now reports the spawnpoint's targetname
             
baseq2.MiscUtil

    Changed: getSpawnpointSingle() now searches for the spawnpoint indicated by 
             GameModule.getSpawnpoint() rather than just settling with the first
             one it finds.
             
base2.Player

    Added:   protected static ResourceBundle gObits holds message strings for
             player obituaries.  The actual message strings are stored in a 
             text file named "<gamedir>\classes\baseq2\obits.properties".  
             The messages in this file could be easily changed or translated
             into other languages.
             
             dispose() method handles quietly disassociating the Player object 
             from the rest of the game - called by playerDisconnect() which 
             handles the public announcements and effects.  dispose() is useful
             when switching a player from one class to another and you want
             to get rid of their old class
             
    Changed: cmd_kill() indicates the type of death as "suicide"
    
             obituary() method now fetches a message template from the gObits
             ResourceBundle, and uses the java.text.MessageFormat class to merge
             the template with the names of the people involved. 
             
             playerDisconnect() now calls dispose() to clean things up, and only
             handles things like printing messages and displaying effects.
                                                         
baseq2.Rocket
baseq2.BlasterBolt
baseq2.GenericGrenade
    
    Changed: cheap workaround of clipping problems..the classes use MASK_SOLID
             for the first frame of the object's life, and then switch to MASK_SHOT.
             This means you can now fire into a wall at close range and hit players
             at a distance with the expected results - but there's still a problem 
             in that firing into another player at close range causes the projectile
             to just pass through them.                                                         
                                                         
----------- End of List -------------------------------------------------------             