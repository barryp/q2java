# The contents of this file are subject to the OpenXML Public
# License Version 1.0; you may not use this file except in
# compliance with the License. You may obtain a copy of the
# License at http://www.openxml.org/license/
# 
# THIS SOFTWARE AND DOCUMENTATION IS PROVIDED ON AN "AS IS" BASIS
# WITHOUT WARRANTY OF ANY KIND EITHER EXPRESSED OR IMPLIED,
# INCLUDING AND WITHOUT LIMITATION, WARRANTIES THAT THE SOFTWARE
# AND DOCUMENTATION IS FREE OF DEFECTS, MERCHANTABLE, FIT FOR A
# PARTICULAR PURPOSE OR NON-INFRINGING. SEE THE LICENSE FOR THE
# SPECIFIC LANGUAGE GOVERNING RIGHTS AND LIMITATIONS UNDER THE
# LICENSE.
# 
# The Initial Developer of this code under the License is
# OpenXML.org. Portions created by OpenXML.org and/or Assaf Arkin
# are Copyright (C) 1998, 1999 OpenXML.org. All Rights Reserved.


# @version $Revision: 1.2 $ $Date: 2000/04/04 23:57:07 $
# @author <a href="mailto:arkin@openxml.org">Assaf Arkin</a>


# Generic log, error and exception messages

Error000 = Unspecified internal error
Error001 = Argument {0} is null
Error001-2 = Argument {0} or {1} is null
Error002 = Class {0} was not found
Error003 = Argument {0} is not a supported type
Error004 = The resource [{0}] could not be found
Error005 = The resource [{0}] faile to load, reason: {1}
Error006 = Object cannot be used in this capacity
Error007 = The specified index is out of bounds
Error008 = Argument {0} is not a valid {1} value
Error009 = An exception of class {0} has occured
Error010 = {0}: {1}


Processor000 = Unspecified processor error
Processor001 = Unkown processor engine {0}
Processor002 = Empty PIProcessor
Processor003 = Empty PIEngineRegistry
Processor004 = Processor engine class {0} does not have public access
Processor005 = Processor engine class {0} does not implement ProcessorEngine
Processor006 = Processor engine class {0} is missing a suitable constructor
Processor007 = Processor engine class {0} constructor does not have public access
Processor008 = Empty ChainProcessorFactory
Processor009 = Empty ChainProcessor


Publisher000 = Could not locate a capable publisher for the target {0}

DOMBuilder000 = DOMBuilder detected an illegal state: Attempt to create document \
    contents before document has started or after document has ended
DOMBuilder001 = DOMBuilder detected an illegal state: Attempt to close the element \
    {0} and not the open element {1} (could be an access synchronization problem)
DOMBuilder002 = DOMBuilder detected an illegal state: Attempt to close the element \
    {0} that was never started (could be an access synchronization problem)


Parser001 = The sequence /> is not supported for closing tags in HTML documents \
    (HTML tags are identified as empty by the DTD)
Parser002 = Attribute list terminated prematurely -- an < has been encountered \
    and treated as the beginning of a new tag
Parser003 = The attribute {0} appears twice in the same element
Parser004 = The attribute {0} appears to have no value -- an empty value is assumed
Parser005 = The attribute value is not enclosed in quotes (single or double)
Parser006 = The element contains junk text {0} inbetween attributes -- \
    could be that the attribute list is not parsed correctly)
Parser007 = Attribute list terminated at end of file -- a portion of the document
    might have been lost
Parser008 = The closing tag {0} is not matched to any open tag at the same \
    nesting level (check for unbalanced element content)
Parser009 = The closing tag {0} does not match with opening tag {1} \
    (check for unbalanced element content)
Parser010 = The element {0} is defined as empty in HTML -- no need to supply a closing tag

Parser011 = Detected text in element {0} -- that element is declared to \
    have element content only and the text contains non-space characters \
    which is ignored
Parser012 = A quoted identifier was read but the closing quote not found \
    until the end of the file
Parser013 = The input source passed to the parser does not specify neither \
    an input stream nor a character reader
Parser014 = The character encoding {0} is not supported by this Java \
    run-time -- either select a supported encoding or fix this parser
Parser015 = Document specifies different character encoding ({0}) than \
    the one used for the document reader ({1}) -- cannot change to new encoding
Parser016 = Missing quoted yes or no value for standalone document \
    declaration
Parser017 = XML document declaration missing mandatory version information -- \
    (e.g. <?xml version="1.0">)
Parser018 = XML external entity declaration missing mandatory encoding -- \
    (e.g. <?xml encoding="UTF-8">)
Parser019 = This parser only properly supports document tagged with XML version 1.0
Parser020 = XML document encoding not properly quoted -- \
    (e.g. <?xml encoding="UTF-8">)

Parser021 = In processing instruction the target name is invalid -- \
    it must be a proper XML token name followed by a space -- ignoring PI
Parser022 = A processing instruction was read but the closing ?> not \
    found until the end of the file
Parser023 = A comment was read but the closing --> not found until the \
    end of the file
Parser024 = A CDATA section was read but the closing ]]> not found until \
    the end of the file
Parser025 = A closing tag was detected but the closing > not found until \
    the end of the file
Parser026 = A closing tag was detected but the closing > not found, \
    and an opening < was found instead -- assuming this is the beginning \
    of a new tag
Parser027 = A character reference was read but not terminated with a ; -- \
    character reference was still parsed and handled properly
Parser028 = An entity reference {0} was read but not terminated with a ; -- \
    regarding it as plain text -- if this was intentional, please use &amp;
Parser029 = Found an > not within the context of a markup -- \
    regarding it as plain text -- if this was intentional, please use &gt;
Parser030 = The general entity {0} was not declared in the DTD, or the DTD \
    was not fully parsed (unfound external subset?)

Parser031 = The external general entity {0} cannot be used in attribute value contents
Parser032 = The unparsed external entity {0} cannot be used in attribute value contents
Parser033 = The unparsed external entity {0} cannot be used in element contents
Parser034 = Document type declaration <!DOCTYPE should be all upper case 
Parser035 = Document tyep declaration <!{0} not supported in an HTML documents
Parser036 = Document type declaration for HTML document must specify HTML as root element \
    <!DOCTYPE HTML SYSTEM ".." "..">
Parser037 = Document type declaration specifies SYSTEM but is missing quoted \
    system identifier for external DTD subset -- unquoted token read instead
Parser038 = Document type declaration specifies PUBLIC but is missing quoted \
    public identifier for external DTD subset -- unquoted token read instead
Parser039 = Document type declaration specifies PUBLIC but is missing quoted \
    system identifier for external DTD subset -- unquoted token read instead
Parser040 = Document type declaration is missing root element name and was ignored

Parser041 = Document type declaration must specify root element name -- \
    found PUBLIC or SYSTEM and assuming that root element name was left out
Parser042 = Document type declaration read but the closing > not found until \
    the end of the file
Parser043 = Encountered an <![ which is not a CDATA section and is not a conditional \
    section (it appears outside of the DTD) -- treating <![ as plain text
Parser043 = Encountered <![ which is not a CDATA section and is outside the \
    DTD -- this might be an error with parsing the DTD -- treating <![ as plain text
Parser044 = Encountered <! outside the DTD -- this might be an error with \
    parsing the DTD -- treating <! as plain text
Parser045 = Found an unresolved character reference {0} -- inserting it \
    in the document as plain text
Parser046 = The element {0} started on line {1} but a matching closing tag \
    was before its parent element {2} was closed -- closing this element now
Parser047 = Cannot resolve the system identifier {1} into a document source
Parser048 = The character < is not allowed to appear in attribute value
Parser049 = Found {0} that is not the beginning of any known markup -- \
    regarding it as plain text -- if this was intentional, please use &lt;
    
Parser050 = Found spaces between </ and tag name in closing tag
Parser051 = Found spaces between < and tag name in opening tag
Parser052 = Found spaces between -- and > in comment closing markup
Parser053 = Found spaces between <! and name in DTD declaration
Parser054 = Found {0} that is not the beginning of any entity reference -- \
    regarding it as plain text -- if this was intentional, please use &amp;
Parser055 = Found unknown character reference &{0}; -- ignoring it
Parser056 = Only comments and processing instructions allowed outsode of root element
Parser057 = No root element found in this document


# Format for error messages consisting of location string {0}, error level {1},
# exception class name {2} and error message {3}.
# For details see org.openxml.x3p.helpers.ErrorReportImpl
Format001 = {1} {0,choice,0#WARNING|0<ERROR|6#FATAL}: {3}
# Format for error messages location including document system {0} and
# public {1} identifier, line number {2} and column in line {3}
# For details see org.openxml.x3p.helpers.ErrorReportImpl
Format002 = {0}:{2}:{3}:

