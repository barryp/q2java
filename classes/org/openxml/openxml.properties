#  OpenXML Properties File
#
#  @version $Revision: 1.5 $ $Date: 1999/03/30 06:49:03 $


#  Specifies the default document class for XML documents, as returned by
#  XMLFactory.createDocument() when docClass is null. If this property is
#  missing, a XMLDocument is created and returned. This property must specify
#  the name of a class that extends org.w3c.dom.Document.
#
#  For example:
#    openxml.document.class=org.openxml.XMLDocument


#  Specifies the classes for XML, HTML and DTD parsers, as returned by
#  XMLFactory.createParser(). Which parser is used depends on the document
#  type specified by docClass, which is either an XML, HTML or DTD document.
#  The exact parser type is obtained from the so named property; if the
#  property is missing, the default is used. These properties must specify
#  the name of classes that extend org.openxml.parser.Parser.
#
#  For example:
#    openxml.parser.xml.class=org.openxml.io.XMLParser
#    openxml.parser.html.class=org.openxml.io.HTMLParser
#    openxml.parser.dtd.class=org.openxml.io.DTDParser


#  Specifies the classes for XML, HTML and DTD printers, as returned by
#  XMLFactory.createPrinter(). Which printer is used depends on the document
#  type specified by docClass, which is either an XML, HTML or DTD document.
#  The exact printer type is obtained from the so named property; if the
#  property is missing, the default is used. These properties must specify
#  the name of classes that extend org.openxml.io.Printer.
#
#  @deprecated
#     These properties hav become obsolete in favor of the X3P Publisher
#     and Producer APIs</a>. These properties are temporarily provided for
#     backward compatibility but will not be included in release 1.1.
#  For example:
#    openxml.printer.xml.class=org.openxml.io.XMLPrinter
#    openxml.printer.html.class=org.openxml.io.HTMLPrinter
#    openxml.printer.dtd.class=org.openxml.io.DTDPrinter


#  Specifies additional source holder factories. Source holders can fetch and
#  cache documents through various access methods, be they network, file system,
#  class loader, etc. New source holders are introduced by means of factories
#  extending org.openxml.source.HolderFactory. Factories are specified by
#  semicolon separate list of class names. The default factories are pre-
#  registered in code.
#
#  For example:
#  openxml.holder.factories=\
#    org.openxml.source.URLHolderFactoryImpl;\
#    org.openxml.source.FileHolderFactoryImpl


#  Specifies additional entity catalogs (XCatalog). Catalogs are XML documents
#  that map public identifiers to system identifiers and remap system identifiers.
#  Catalogs are written based on the XCatalog DTD and are specified by semicolon
#  separated list of document URIs. The default catalog is pre-loaded in code.
#
#  For example:
#  openxml.holder.catalogs=\
#    res:/org/openxml/source/dtd-catalog/Catalog.xml

