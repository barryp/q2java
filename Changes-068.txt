CHANGES from v0.6.7 to v0.6.8

---------------------------------------------------------------------------
This file will just list changes in the core packages 
(q2java, q2jgame, baseq2, menno.ctf). Add-ons will have to list their own changes.
---------------------------------------------------------------------------

DLL CHANGES ===============================================================

    (No changes)
    
JAVA CHANGES ==============================================================

q2java.gui.GenericMenu

    Added:   setPrefix() and setBounds() methods to allow menus to be 
             customized
    
    Changed: constructor changed to use no arguments, NativeEntity owner
             of the menu now passed to show() instead.
             
q2java.gui.PlayerMenu

    New subclass of GenericMenu, smarter in that it can bind itself to 
    a baseq2.Player, handle the menu commands itself (for invnext, invprev,
    and invuse), and invoke player commands when an item is selected.             

menno.ctf.CTFMenu
    
    Removed..the new q2java.gui.PlayerMenu simplifies things enough so 
    that it was practical to put the CTF menu code right inside the 
    player class.
    
menno.ctf.GameModule

    Changed: now loads CTF Techs from the menno.ctftech package instead
             of menno.ctf.spawn, and uses the new names
             
menno.ctf.GenericTech

    Moved to menno.ctftech package, so it they can be used by mods other
    than CTF
    
menno.ctf.Player

    Added:   isTeammate() overrides new baseq2.Player.isTeammate() to let
             objects check if two players are CTF teammates.
             
    Changed: cmd_* methods changed to work with new player command scheme.
            
             cmd_inven() now handles displaying the CTF Menu, but doesn't
             have to bother with closing the menu
             
             cmd_invnext(), cmd_invprev(), cmd_putaway() no longer have to
             fool with handling menus.
             
    Removed: damage() no longer needed, the Disruptor tech now acts as a
             DamageFilter - and the marking of aggressive enemies is handled
             by the Team class, so the baseq2.Player.damage() no longer
             needs to be overridden.    
             
             say_team() no longer needed, since Team objects register to
             handle the say_team player command.
             
menno.ctf.Team

    Added:   cmd_say_team() handles "say_team" command for players who
             have joined a team
             
             filterDamage() - keeps teammates from hurting each other, and
             marks enemies aggressive to the flag carrier.
             
             isTeamMember() - to allow for checks whether a player belongs
             to a particular team
             
    Changed: now implements baseq2.DamageFilter
    
             addPlayer() and removePlayer() registers/deregisters the team as 
             a DamageFilter and CommandHandler for players belonging to 
             the team.
             
    Removed: say() now handled more directly by the cmd_say_team() method.
    
menno.ctf.spawn.item_tech*

    Classes moved to menno.ctftech and renamed
    
menno.ctftech.AutoDoc
menno.ctftech.DisruptorShield
menno.ctftech.PowerAmplifier
menno.ctftech.TimeAccel

    Classes moved from menno.ctf.spawn and renamed to be more descriptive
    
menno.ctftech.DisruptorShield

    Changed: Reworked to implement DamageFilter, and protects players 
             through that mechanism, rather than relying on a modified
             Player.damage() method.    

baseq2.ArmorDamageFilter

    New class, implementing DamageFilter interface, handles basic Player 
    armor functions.  Most code was taken out of the Player class, basically 
    from the addArmor() and damage() methods.
    
baseq2.BfgBlast
baseq2.BlasterBolt
baseq2.Rocket

    Added:   no-arg constructors - to allow Launchers to fire replacement
             versions of these projectiles.
    
    Changed: old constructors renamed to launch() method.
    
baseq2.DamageFilter

    New interface from Brian Haskin, for objects that want to modify the
    damage inflicted on a player
    
baseq2.DamageObject
    
    New class from Brian Haskin, holds all parameters relevant to damage
    being inflicted on a GameObject - is passed to DamageFilters        
    
baseq2.GenericBlaster

    Changed: no longer hardcoded to only fire baseq2.BlasterBolts, now
             looks up class of blaster bolt, allowing mods to replace
             the projectile.

baseq2.GenericGrenade             
baseq2.Grenade
baseq2.HandGrenade
             
    Added:   no-arg constructor - to allow Launchers to fire replacement
             versions of these projectiles.
    
    Changed: old constructor renamed to toss() method.
        
baseq2.GenericPowerUp        

    Added:   getRespawnTime() returns value of 60 seconds.
    
baseq2.GenericWeapon

    Changed: weaponThink() now calls deactivate() when weapon runs out of 
             ammo - fixing bug that caused a dying player to drop multiple
             weapons in some situations.
             
baseq2.Player

    Added:   addCommandHandler(), removeCommandHandler() - let arbitrary objects
             register to handle player commands. 
             
             addDamageFilter(), removeDamageFilter() - let objects implementing
             DamageFilter interface register to handle damage inflicted
             on a player. (Brian Haskin)

             breath() methods updates internal variables tracking player's air
             status - enternal objects like enviro suit can call it to allow players
             to breath underwater and such.
             
             filterDamage() method handles running a DamageObject through whatever
             filters have been registered with this player. (Brian Haskin)
             
             getArmor() - allows access to external ArmorDamageFilter() object
             
             getWaterLevel() - find out how deep the Player is into the stuff.
             
             isTeammate() - check whether another player is a teammate 
             to this one, returns false, but mods like CTF should override.                          
             
             playerCommand(String cmd) - simulates the player typing a command
             
    Changed: cmd_* methods updated to take a second parameter: a string containing
             the full player command except for the first word (as returned by
             Engine.args())

             cmd_weapnext(), cmd_weapprev(), cmd_weaplast() methods updated
             to not throw NullPointerExceptions when dead players try to 
             use them.
             
             damage() method reworked to package damage parameters into a 
             DamageObject, and pass it to registered filters before acting
             on it. (Brian Haskin) Handles screams from lava damage.              
             
             spawn() call to setMins() corrected (fixes bug in barryp.testbot)
             (James Bielby)
             
             worldEffects() - uses breath() method to update player breathing
             state, doesn't cause screaming when in lava.
                          
    Removed: addArmor(), getArmorCount(), getArmorMaxCount(), setArmorCount(),
             setArmorMaxCount() - now handled by external ArmorDamageFilter 
             class moved to ArmorDamageFilter class.
             
             say() now handled more directly by cmd_say()
             
             say_team() now handled more directly by cmd_say_team()
               
baseq2.TargetDelayer

    New class from Peter Donald to help the baseq2.spawn.trigger_multiple class
               
baseq2.spawn.ammo_grenades
baseq2.spawn.weapon_bfg
baseq2.spawn.weapon_grenadelauncher
baseq2.spawn.weapon_rocketlauncher

    Changed: fire() method updated to lookup projectile class, rather
             than have it hardcoded.
             
baseq2.spawn.item_breather             
baseq2.spawn.item_enviro  
baseq2.spawn.item_invulnerablilty

    New classes from Brian Haskin 
        
baseq2.spawn.item_health_mega                              

    Changed: now implements PlayerStateListener to react properly
             when player dies.
    
baseq2.spawn.target_blaster

    New class from Peter Donald implements map widget that fires 
    blaster bolts
                 
baseq2.spawn.trigger_multiple             

    Changed: updated by Peter Donald to more completely implement
             this particular kind of map entity, with the wait
             and delay parameters.
    
----------- End of List -------------------------------------------------------             